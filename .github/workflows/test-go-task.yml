# Source: https://github.com/arduino/tooling-project-assets/blob/main/workflow-templates/test-go-task.md
name: Test Go

env:
  GO_VERSION: "1.22"

on:
  create:
  push:
    paths:
      - ".github/workflows/test-go-task.ya?ml"
      - "**/go.mod"
      - "**/go.sum"
      - "Taskfile.ya?ml"
      - "**.go"
  pull_request:
    paths:
      - ".github/workflows/test-go-task.ya?ml"
      - "**/go.mod"
      - "**/go.sum"
      - "Taskfile.ya?ml"
      - "**.go"
  workflow_dispatch:
  repository_dispatch:

jobs:
  run-determination:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.determination.outputs.result }}
    steps:
      - name: Determine if the rest of the workflow should run
        id: determination
        run: |
          RELEASE_BRANCH_REGEX="refs/heads/[0-9]+.[0-9]+.x"
          # The `create` event trigger doesn't support `branches` filters, so it's necessary to use Bash instead.
          if [[ \
            "${{ github.event_name }}" != "create" || \
            "${{ github.ref }}" =~ $RELEASE_BRANCH_REGEX \
          ]]; then
            # Run the other jobs.
            RESULT="true"
          else
            # There is no need to run the other jobs.
            RESULT="false"
          fi

          echo "result=$RESULT" >> $GITHUB_OUTPUT

  test:
    name: test (${{ matrix.module.path }} - ${{ matrix.operating-system }})
    needs: run-determination
    if: needs.run-determination.outputs.result == 'true'

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - ubuntu-latest
        module:
          - path: ./
            codecov-flags: unit

    runs-on: ${{ matrix.operating-system }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x

      - name: Run tests
        env:
          GO_MODULE_PATH: ${{ matrix.module.path }}
        run: task go:test
